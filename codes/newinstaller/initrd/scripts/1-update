# By 
# Luoyuan Xiao     <xiaoluoyuan@163.com>
# Yu Chen          <yuchen@tsinghua.edu.cn>
# Last updated 2016/08/03
#
# License: GNU Public License
#

# for update

rebooting()
{
	dialog --title " OPENTHOS Rebooting... " --nocancel --pause "" 8 41 1
	sync
	umount -a
	reboot -f
}

progress_bar()
{
	which dialog > /dev/null 2>&1
	if [ $? -ne 0 ]; then
	     echo "$1  $2"
	else
	     dialog --clear --title " $1 " --gauge "\n $2" 8 70
	fi
}

check_update_root()
{
	echo "check_update_root() $PWD"

	iso=$1

	mkdir -p /update/iso
	mount -o loop $iso /update/iso
	#SRC=iso

	if [ ! -e /update/iso/ramdisk.img ]; then
	    echo "Missing ramdisk.img"
		return 1
	fi

	if [ ! -e /update/iso/kernel ]; then
	    echo "Missing kernel"
		return 1
	fi
	
	if [ ! -e /update/iso/initrd.img  ]; then
	    echo "Missing initrd.img"
		return 1
	fi	


	if [ -e /update/iso/system.sfs ]; then
	    mountpoint -q /update/sfs && umount /udpate/sfs
		[[ -d /update/sfs ]] || mkdir -p /update/sfs
		[[ -d /update/system ]] || mkdir -p /update/system
		mount -o loop /update/iso/system.sfs /update/sfs
		mount -o loop /update/sfs/system.img /update/system
	elif [ -e /update/iso/system.img ]; then
		mount -o remount,rw foo /update
		mount -o loop /update/iso/system.img /update/system
	elif [ -d /update/iso/system ]; then
		mount -o remount,rw foo /update
		mount --bind /update/iso/system /update/system
	else
		rm -rf *
		return 1
	fi
	mkdir -p /update/mnt
	echo " found at $1"
}

update_to()
{
	echo "update_to() $PWD"

	cd /

	if [ !\( mountpoint -q /mnt -a -a $1/kernel \) ]; then
		dialog --clear --title " Error " --defaultno --yesno \
			"\n Cannot find OPENTHOS partition \n" 8 37
		return 255
	fi

	fs=`cat /proc/mounts | grep '/android/system' | awk '{ print $3 }'`

	files="/udpate/iso/kernel /update/iso/initrd.img update/iso/ramdisk.img"
	sysimg="/update/system"
	files="$files $sysimg"
    
    if [ $1 == $newadir ]; then
        dialog --infobox "\n update $newadir itself..." 5 27
        mv $newadir/data $newadir-data
    fi
        
    rm -rf $newadir/*
	mkdir -p $newadir
    cp f /update/iso/kernel       $newadir/
    cp f /update/iso/initrd.img   $newadir/
    cp f /update/iso/ramdisk.img  $newadir/   
    cp -af /update/system         $newadir/    
   


    mkdir -p $newadir/data
    if [ $1 != $newadir ]; then
	   cp -af $1/data/* $newadir/data/
	else
	   cp -af $newadir-data/* $newadir/data/
	   rm -rf $newadir-data/
	fi
	   
    # clean some old cache
	dialog --infobox "\n Clean Old Cache..." 5 27
	#rm nouesed os iso img
	rm -rf $newadir/data/media/0/System_OS/
    #rm some old cache files
    rm -rf $newadir/data/dalvik-cache/* $newadir/data/system/wpa_supplicant
    # sync data to disk
	dialog --infobox "\n Syncing to disk..." 5 27
	sync

	return $result
}

do_update()
{
	echo do_update ...
	
	newadir="/mnt/androidnewest"

	mkdir /update
	mount -t tmpfs tmpfs /update
	cd /update

	check_update_root $iso_file

	if [ -e /update/iso/install.img ]; then
    	zcat /update/iso/install.img | ( cd /; cpio -iud > /dev/null )
    	busybox modprobe atkbd
	else
		echo "Cannot find install.img "
		return 1
	fi

	dialog --title " Confirm " --no-label Skip --defaultno --yesno \
		"\n Want to use newest OPENTHOS in $iso_file ?" 7 47
	if [ $? -ne 0 ]; then
		return 1
	fi

	retval=1

	update_to $1

	retval=$?

	if [ $retval -eq 255 ]; then
		dialog --title ' Error! ' --yes-label Retry --no-label Reboot \
			--yesno '\n Update failed! Please check enough free disk space to update newest OPENTHOS.' 8 51
		[ $? -eq 1 ] && rebooting
	fi

	if [ -e $adir/kernel ]; then
		mv $detect_file ${detect_file}.old
		dialog --title " Question " --yesno \
	    	  "\n Finished updateing $iso_name.\nWould you like to rebooting?" 8 55
		if [ $? -eq 0 ]; then	    
	     	rebooting
    	fi
	fi

    return 1;

}

update_detect()
{

	echo update_detect ....
	
	if [ !\( mountpoint -q /mnt -a -e /mnt/android*/kernel \) ]; then
		echo "Cannot find OPENTHOS partition "
		return 255
	fi
	
	ADIRS=`dirname /mnt/android*/kernel`
	echo $ADIRS
    for adir in $ADIRS; do
	    detect_file="$adir/data/media/0/System_OS/update"
	    iso_name=$(tac $detect_file | sed -n 2p )
	    iso_file=$(dirname $detect_file)/$iso_name
	    #iso_file="system.iso"

	     value=`tail -n 1 $detect_file`
	     if [ "$value"x = "1"x -a -e $iso_file ]; then
	         echo "Update newest OPENTHOS $iso_file... "
#			 dialog --title " Question " --yesno \
#				    "\nFound $adir has NEWEST $iso_name.\nWould you like to install it?" 8 55
#			 if [ $? -eq 0 ]; then	    
	         	do_update $adir
#	         fi
	     fi
    done
	echo "No Update "
}

